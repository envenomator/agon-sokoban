Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED15-Apr-23     15:21:42     page:   1


PC     Object              I  Line    Source 
                           A     1    ;
                           A     2    ; Title:		AGON MOS - MOS assembly interfa
                           A     3    ; Author:		Jeroen Venema
                           A     4    ; Created:		15/10/2022
                           A     5    ; Last Updated:	23/02/2023
                           A     6    ; 
                           A     7    ; Modinfo:
                           A     8    ; 15/10/2022:		Added _putch, _getch
                           A     9    ; 21/10/2022:		Added _puts
                           A    10    ; 22/10/2022:		Added _waitvblank, _mos_f* 
                           A    11    ; 26/11/2022:       __putch, changed default ro
                           A    12    ; 10/01/2023:		Added _getsysvar_cursorX/Y 
                           A    13    ; 23/02/2023:		Added _mos_save and _mos_de
                           B     0    	.include "mos_api.inc"
                           B     1    ;
                           B     2    ; Title:	AGON MOS - API for user projects
                           B     3    ; Author:	Dean Belfield
                           B     4    ; Created:	03/08/2022
                           B     5    ; Last Updated:	29/03/2023
                           B     6    ;
                           B     7    ; Modinfo:
                           B     8    ; 05/08/2022:	Added mos_feof
                           B     9    ; 09/08/2022:	Added system variables: cursorX
                           B    10    ; 18/08/2022:	Added system variables: scrchar
                           B    11    ; 05/09/2022:	Added mos_ren, vdp_pflag_mode
                           B    12    ; 24/09/2022:	Added mos_getError, mos_mkdir
                           B    13    ; 13/10/2022:	Added mos_oscli
                           B    14    ; 23/02/2023:	Added more sysvars, fixed typo 
                           B    15    ; 04/03/2023:	Added sysvar_scrpixelIndex
                           B    16    ; 08/03/2023:	Renamed sysvar_keycode to sysva
                           B    17    ; 15/03/2023:	Added mos_copy, mos_getrtc, mos
                           B    18    ; 21/03/2023:	Added mos_setintvector, sysvars
                           B    19    ; 22/03/2023:	The VDP commands are now indexe
                           B    20    ; 29/03/2023:	Added mos_uopen, mos_uclose, mo
                           B    21    
                           B    22    ; VDP control (VDU 23, 0, n)
                           B    23    ;
       00000080            B    24    vdp_gp:			EQU 	80h
       00000081            B    25    vdp_keycode:		EQU 	81h
       00000082            B    26    vdp_cursor:		EQU	82h
       00000083            B    27    vdp_scrchar:		EQU	83h
       00000084            B    28    vdp_scrpixel:		EQU	84h
       00000085            B    29    vdp_audio:		EQU	85h
       00000086            B    30    vdp_mode:		EQU	86h
       00000087            B    31    vdp_rtc:		EQU	87h
       00000088            B    32    vdp_keystate:		EQU	88h
       000000C0            B    33    vdp_logicalcoords:	EQU	C0h
       000000FF            B    34    vdp_terminalmode:	EQU	FFh
                           B    35    
                           B    36    ; MOS high level functions
                           B    37    ;
       00000000            B    38    mos_getkey:		EQU	00h
       00000001            B    39    mos_load:		EQU	01h
       00000002            B    40    mos_save:		EQU	02h
       00000003            B    41    mos_cd:			EQU	03h
       00000004            B    42    mos_dir:		EQU	04h
       00000005            B    43    mos_del:		EQU	05h
       00000006            B    44    mos_ren:		EQU	06h
       00000007            B    45    mos_mkdir:		EQU	07h
       00000008            B    46    mos_sysvars:		EQU	08h
       00000009            B    47    mos_editline:		EQU	09h
       0000000A            B    48    mos_fopen:		EQU	0Ah
       0000000B            B    49    mos_fclose:		EQU	0Bh
       0000000C            B    50    mos_fgetc:		EQU	0Ch
       0000000D            B    51    mos_fputc:		EQU	0Dh
       0000000E            B    52    mos_feof:		EQU	0Eh
       0000000F            B    53    mos_getError:		EQU	0Fh
       00000010            B    54    mos_oscli:		EQU	10h
       00000011            B    55    mos_copy:		EQU	11h
       00000012            B    56    mos_getrtc:		EQU	12h
       00000013            B    57    mos_setrtc:		EQU	13h
       00000014            B    58    mos_setintvector:	EQU	14h
       00000015            B    59    mos_uopen:		EQU	15h
       00000016            B    60    mos_uclose:		EQU	16h
       00000017            B    61    mos_ugetc:		EQU	17h
       00000018            B    62    mos_uputc:		EQU 	18h
                           B    63    
                           B    64    ; FatFS file access functions
                           B    65    ;
       00000080            B    66    ffs_fopen:		EQU	80h
       00000081            B    67    ffs_fclose:		EQU	81h
       00000082            B    68    ffs_fread:		EQU	82h
       00000083            B    69    ffs_fwrite:		EQU	83h
       00000084            B    70    ffs_fseek:		EQU	84h
       00000085            B    71    ffs_ftruncate:		EQU	85h
       00000086            B    72    ffs_fsync:		EQU	86h
       00000087            B    73    ffs_fforward:		EQU	87h
       00000088            B    74    ffs_fexpand:		EQU	88h
       00000089            B    75    ffs_fgets:		EQU	89h
       0000008A            B    76    ffs_fputc:		EQU	8Ah
       0000008B            B    77    ffs_fputs:		EQU	8Bh
       0000008C            B    78    ffs_fprintf:		EQU	8Ch
       0000008D            B    79    ffs_ftell:		EQU	8Dh
       0000008E            B    80    ffs_feof:		EQU	8Eh
       0000008F            B    81    ffs_fsize:		EQU	8Fh
       00000090            B    82    ffs_ferror:		EQU	90h
                           B    83    
                           B    84    ; FatFS directory access functions
                           B    85    ;
       00000091            B    86    ffs_dopen:		EQU	91h
       00000092            B    87    ffs_dclose:		EQU	92h
       00000093            B    88    ffs_dread:		EQU	93h
       00000094            B    89    ffs_dfindfirst:		EQU	94h
       00000095            B    90    ffs_dfindnext:		EQU	95h
                           B    91    
                           B    92    ; FatFS file and directory management functions
                           B    93    ;
       00000096            B    94    ffs_stat:		EQU	96h
       00000097            B    95    ffs_unlink:		EQU	97h
       00000098            B    96    ffs_rename:		EQU	98h
       00000099            B    97    ffs_chmod:		EQU	99h
       0000009A            B    98    ffs_utime:		EQU	9Ah
       0000009B            B    99    ffs_mkdir:		EQU	9Bh
       0000009C            B   100    ffs_chdir:		EQU	9Ch
       0000009D            B   101    ffs_chdrive:		EQU	9Dh
       0000009E            B   102    ffs_getcwd:		EQU	9Eh
                           B   103    
                           B   104    ; FatFS volume management and system configurat
                           B   105    ;
       0000009F            B   106    ffs_mount:		EQU	9Fh
       000000A0            B   107    ffs_mkfs:		EQU	A0h
       000000A1            B   108    ffs_fdisk		EQU	A1h
       000000A2            B   109    ffs_getfree:		EQU	A2h
       000000A3            B   110    ffs_getlabel:		EQU	A3h
       000000A4            B   111    ffs_setlabel:		EQU	A4h
       000000A5            B   112    ffs_setcp:		EQU	A5h
                           B   113    	
                           B   114    ; File access modes
                           B   115    ;
       00000001            B   116    fa_read:		EQU	01h
       00000002            B   117    fa_write:		EQU	02h
       00000000            B   118    fa_open_existing:	EQU	00h
       00000004            B   119    fa_create_new:		EQU	04h
       00000008            B   120    fa_create_always:	EQU	08h
       00000010            B   121    fa_open_always:		EQU	10h
       00000030            B   122    fa_open_append:		EQU	30h
                           B   123    	
                           B   124    ; System variable indexes for api_sysvars
                           B   125    ; Index into _sysvars in globals.asm
                           B   126    ;
       00000000            B   127    sysvar_time:		EQU	00h	; 4: Clock timer in
       00000004            B   128    sysvar_vpd_pflags:	EQU	04h	; 1: Flags to indic
       00000005            B   129    sysvar_keyascii:	EQU	05h	; 1: ASCII keycode,
       00000006            B   130    sysvar_keymods:		EQU	06h	; 1: Keycode modifi
       00000007            B   131    sysvar_cursorX:		EQU	07h	; 1: Cursor X posit
       00000008            B   132    sysvar_cursorY:		EQU	08h	; 1: Cursor Y posit
       00000009            B   133    sysvar_scrchar:		EQU	09h	; 1: Character read
       0000000A            B   134    sysvar_scrpixel:	EQU	0Ah	; 3: Pixel data rea
       0000000D            B   135    sysvar_audioChannel:	EQU	0Dh	; 1: Audio chan
       0000000E            B   136    sysvar_audioSuccess:	EQU	0Eh	; 1: Audio chan
       0000000F            B   137    sysvar_scrWidth:	EQU	0Fh	; 2: Screen width i
       00000011            B   138    sysvar_scrHeight:	EQU	11h	; 2: Screen height 
       00000013            B   139    sysvar_scrCols:		EQU	13h	; 1: Screen columns
       00000014            B   140    sysvar_scrRows:		EQU	14h	; 1: Screen rows in
       00000015            B   141    sysvar_scrColours:	EQU	15h	; 1: Number of colo
       00000016            B   142    sysvar_scrpixelIndex:	EQU	16h	; 1: Index of p
       00000017            B   143    sysvar_vkeycode:	EQU	17h	; 1: Virtual key co
       00000018            B   144    sysvar_vkeydown		EQU	18h	; 1: Virtual key st
       00000019            B   145    sysvar_vkeycount:	EQU	19h	; 1: Incremented ev
       0000001A            B   146    sysvar_rtc:		EQU	1Ah	; 8: Real time clock da
       00000022            B   147    sysvar_keydelay:	EQU	22h	; 2: Keyboard repea
       00000024            B   148    sysvar_keyrate:		EQU	24h	; 2: Keyboard repea
       00000026            B   149    sysvar_keyled:		EQU	26h	; 1: Keyboard LED s
                           B   150    	
                           B   151    ; Flags for the VPD protocol
                           B   152    ;
       00000001            B   153    vdp_pflag_cursor:	EQU	00000001b
       00000002            B   154    vdp_pflag_scrchar:	EQU	00000010b
       00000004            B   155    vdp_pflag_point:	EQU	00000100b
       00000008            B   156    vdp_pflag_audio:	EQU	00001000b
       00000010            B   157    vdp_pflag_mode:		EQU	00010000b
       00000020            B   158    vdp_pflag_rtc:		EQU	00100000b
                           B   159    	
                           B   160    ;
                           B   161    ; Macro for calling the API
                           B   162    ; Parameters:
                           B   163    ; - function: One of the function numbers liste
                           B   164    ;
                           B   165    MOSCALL:		MACRO	function
                           B   166    			LD	A, function
                           B   167    			RST.LIS	08h
                           B   168    			ENDMACRO 	
                           A    15    
                           A    16    	XDEF _putch
                           A    17    	XDEF __putch
                           A    18    	XDEF _getch
                           A    19    	XDEF _waitvblank
                           A    20    	XDEF _mos_puts
                           A    21    	XDEF _mos_load
                           A    22    	XDEF _mos_save
                           A    23    	XDEF _mos_cd
                           A    24    	XDEF _mos_dir
                           A    25    	XDEF _mos_del
                           A    26    	XDEF _mos_ren
                           A    27    	XDEF _mos_copy
                           A    28    	XDEF _mos_mkdir
                           A    29    	XDEF _mos_sysvars
                           A    30    	XDEF _mos_editline
                           A    31    	XDEF _mos_fopen
                           A    32    	XDEF _mos_fclose
                           A    33    	XDEF _mos_fgetc
                           A    34    	XDEF _mos_fputc
                           A    35    	XDEF _mos_feof
                           A    36    	XDEF _mos_getError
                           A    37    	XDEF _mos_oscli
                           A    38    	XDEF _mos_getrtc
                           A    39    	XDEF _mos_setrtc
                           A    40    	XDEF _mos_setintvector
                           A    41    	XDEF _mos_uopen
                           A    42    	XDEF _mos_uclose
                           A    43    	XDEF _mos_ugetc
                           A    44    	XDEF _mos_uputc
                           A    45    
                           A    46    	XDEF _getsysvar_vpd_pflags
                           A    47    	XDEF _getsysvar_keyascii
                           A    48    	XDEF _getsysvar_keymods
                           A    49    	XDEF _getsysvar_cursorX
                           A    50    	XDEF _getsysvar_cursorY
                           A    51    	XDEF _getsysvar_scrchar
                           A    52    	XDEF _getsysvar_scrpixel
                           A    53    	XDEF _getsysvar_audioChannel
                           A    54    	XDEF _getsysvar_audioSuccess
                           A    55    	XDEF _getsysvar_scrwidth
                           A    56    	XDEF _getsysvar_scrheight
                           A    57    	XDEF _getsysvar_scrCols
                           A    58    	XDEF _getsysvar_scrRows
                           A    59    	XDEF _getsysvar_scrColours
                           A    60    	XDEF _getsysvar_scrpixelIndex
                           A    61    	XDEF _getsysvar_vkeycode
                           A    62    	XDEF _getsysvar_vkeydown
                           A    63    	XDEF _getsysvar_vkeycount
                           A    64    	XDEF _getsysvar_rtc
                           A    65    	XDEF _getsysvar_keydelay
                           A    66    	XDEF _getsysvar_keyrate
                           A    67    	XDEF _getsysvar_keyled
                           A    68    	
                           A    69    	segment CODE
                           A    70    	.assume ADL=1
                           A    71    	
04295F                     A    72    _putch:
04295F                     A    73    __putch:
04295F DDE5                A    74    	push 	ix
042961 DD210000 00         A    75    	ld 		ix,0
042966 DD39                A    76    	add 	ix, sp
042968 DD7E06              A    77    	ld 		a, (ix+6)
04296B 5BD7                A    78    	rst.lil	10h
04296D 21000000            A    79    	ld		hl,0
042971 6F                  A    80    	ld		l,a
042972 DDF9                A    81    	ld		sp,ix
042974 DDE1                A    82    	pop		ix
042976 C9                  A    83    	ret
                           A    84    
042977                     A    85    _mos_puts:
042977 DDE5                A    86    	push	ix
042979 DD210000 00         A    87    	ld 		ix,0
04297E DD39                A    88    	add 	ix, sp
042980 DD2706              A    89    	ld 		hl,	(ix+6)	; Address of buffer
042983 DD0709              A    90    	ld		bc, (ix+9)	; Size to write from bu
042986 DD7E0C              A    91    	ld		a,	(ix+12) ; delimiter - only if s
042989 5BDF                A    92    	rst.lil	18h			; Write a block of byte
04298B DDF9                A    93    	ld		sp,ix
04298D DDE1                A    94    	pop		ix
04298F C9                  A    95    	ret
                           A    96    
042990                     A    97    _getch:
042990 DDE5                A    98    	push	ix
042992 3E00                A    99    	ld		a, mos_getkey	; Read a keypress f
042994 5BCF                A   100    	rst.lil	08h
042996 DDE1                A   101    	pop		ix
042998 C9                  A   102    	ret
                           A   103    
042999                     A   104    _waitvblank:
042999 DDE5                A   105    	push	ix
04299B 3E08                A   106    	ld		a, mos_sysvars
04299D 5BCF                A   107    	rst.lil	08h
04299F DD7E00              A   108    	ld		a, (ix + sysvar_time + 0)
0429A2 DDBE00              A   109    $$:	cp		a, (ix + sysvar_time + 0)
0429A5 28 FB               A   110    	jr		z, $B
0429A7 DDE1                A   111    	pop		ix
0429A9 C9                  A   112    	ret
                           A   113    
0429AA                     A   114    _getsysvar_vpd_pflags:
0429AA DDE5                A   115    	push	ix
0429AC 3E08                A   116    	ld		a, mos_sysvars
0429AE 5BCF                A   117    	rst.lil	08h
0429B0 DD7E04              A   118    	ld		a, (ix+sysvar_vpd_pflags)
0429B3 DDE1                A   119    	pop		ix
0429B5 C9                  A   120    	ret
                           A   121    
0429B6                     A   122    _getsysvar_keyascii:
0429B6 DDE5                A   123    	push	ix
0429B8 3E08                A   124    	ld		a, mos_sysvars
0429BA 5BCF                A   125    	rst.lil	08h
0429BC DD7E05              A   126    	ld		a, (ix+sysvar_keyascii)
0429BF DDE1                A   127    	pop		ix
0429C1 C9                  A   128    	ret
                           A   129    
0429C2                     A   130    _getsysvar_keymods:
0429C2 DDE5                A   131    	push	ix
0429C4 3E08                A   132    	ld		a, mos_sysvars
0429C6 5BCF                A   133    	rst.lil	08h
0429C8 DD7E06              A   134    	ld		a, (ix+sysvar_keymods)
0429CB DDE1                A   135    	pop		ix
0429CD C9                  A   136    	ret
                           A   137    
0429CE                     A   138    _getsysvar_cursorX:
0429CE DDE5                A   139    	push	ix
0429D0 3E08                A   140    	ld		a, mos_sysvars			; MOS Call 
0429D2 5BCF                A   141    	rst.lil	08h					; returns point
0429D4 DD7E07              A   142    	ld		a, (ix+sysvar_cursorX)
0429D7 DDE1                A   143    	pop		ix
0429D9 C9                  A   144    	ret
                           A   145    
0429DA                     A   146    _getsysvar_cursorY:
0429DA DDE5                A   147    	push 	ix
0429DC 3E08                A   148    	ld		a, mos_sysvars			; MOS Call 
0429DE 5BCF                A   149    	rst.lil	08h					; returns point
0429E0 DD7E08              A   150    	ld		a, (ix+sysvar_cursorY)
0429E3 DDE1                A   151    	pop		ix
0429E5 C9                  A   152    	ret
                           A   153    
0429E6                     A   154    _getsysvar_scrchar:
0429E6 DDE5                A   155    	push	ix
0429E8 3E08                A   156    	ld		a, mos_sysvars
0429EA 5BCF                A   157    	rst.lil	08h
0429EC DD7E09              A   158    	ld		a, (ix+sysvar_scrchar)
0429EF DDE1                A   159    	pop		ix
0429F1 C9                  A   160    	ret
                           A   161    
0429F2                     A   162    _getsysvar_scrpixel:
0429F2 DDE5                A   163    	push	ix
0429F4 3E08                A   164    	ld		a, mos_sysvars
0429F6 5BCF                A   165    	rst.lil	08h
0429F8 DD270A              A   166    	ld		hl, (ix+sysvar_scrpixel)
0429FB DDE1                A   167    	pop		ix
0429FD C9                  A   168    	ret
                           A   169    
0429FE                     A   170    _getsysvar_audioChannel:
0429FE DDE5                A   171    	push	ix
042A00 3E08                A   172    	ld		a, mos_sysvars
042A02 5BCF                A   173    	rst.lil	08h
042A04 DD7E0D              A   174    	ld		a, (ix+sysvar_audioChannel)
042A07 DDE1                A   175    	pop		ix
042A09 C9                  A   176    	ret
                           A   177    
042A0A                     A   178    _getsysvar_audioSuccess:
042A0A DDE5                A   179    	push	ix
042A0C 3E08                A   180    	ld		a, mos_sysvars
042A0E 5BCF                A   181    	rst.lil	08h
042A10 DD7E0E              A   182    	ld		a, (ix+sysvar_audioSuccess)
042A13 DDE1                A   183    	pop		ix
042A15 C9                  A   184    	ret
                           A   185    
042A16                     A   186    _getsysvar_scrwidth:
042A16 DDE5                A   187    	push	ix
042A18 3E08                A   188    	ld		a, mos_sysvars			; MOS Call 
042A1A 5BCF                A   189    	rst.lil	08h					; returns point
042A1C 21000000            A   190    	ld		hl,0
042A20 DD6E0F              A   191    	ld		l, (ix+sysvar_scrWidth)	; get curre
042A23 DD6610              A   192    	ld		h, (ix+sysvar_scrWidth+1)
042A26 DDE1                A   193    	pop		ix
042A28 C9                  A   194    	ret
                           A   195    
042A29                     A   196    _getsysvar_scrheight:
042A29 DDE5                A   197    	push 	ix
042A2B 3E08                A   198    	ld		a, mos_sysvars			; MOS Call 
042A2D 5BCF                A   199    	rst.lil	08h					; returns point
042A2F 21000000            A   200    	ld		hl,0
042A33 DD6E11              A   201    	ld		l, (ix+sysvar_scrHeight)	; get c
042A36 DD6612              A   202    	ld		h, (ix+sysvar_scrHeight+1)
042A39 DDE1                A   203    	pop		ix
042A3B C9                  A   204    	ret
                           A   205    
042A3C                     A   206    _getsysvar_scrCols:
042A3C DDE5                A   207    	push	ix
042A3E 3E08                A   208    	ld		a, mos_sysvars
042A40 5BCF                A   209    	rst.lil	08h
042A42 DD7E13              A   210    	ld		a, (ix+sysvar_scrCols)
042A45 DDE1                A   211    	pop		ix
042A47 C9                  A   212    	ret
                           A   213    
042A48                     A   214    _getsysvar_scrRows:
042A48 DDE5                A   215    	push	ix
042A4A 3E08                A   216    	ld		a, mos_sysvars
042A4C 5BCF                A   217    	rst.lil	08h
042A4E DD7E14              A   218    	ld		a, (ix+sysvar_scrRows)
042A51 DDE1                A   219    	pop		ix
042A53 C9                  A   220    	ret
                           A   221    
042A54                     A   222    _getsysvar_scrColours:
042A54 DDE5                A   223    	push	ix
042A56 3E08                A   224    	ld		a, mos_sysvars
042A58 5BCF                A   225    	rst.lil	08h
042A5A DD7E15              A   226    	ld		a, (ix+sysvar_scrColours)
042A5D DDE1                A   227    	pop		ix
042A5F C9                  A   228    	ret
                           A   229    
042A60                     A   230    _getsysvar_scrpixelIndex:
042A60 DDE5                A   231    	push	ix
042A62 3E08                A   232    	ld		a, mos_sysvars
042A64 5BCF                A   233    	rst.lil	08h
042A66 DD7E16              A   234    	ld		a, (ix+sysvar_scrpixelIndex)
042A69 DDE1                A   235    	pop		ix
042A6B C9                  A   236    	ret
                           A   237    
042A6C                     A   238    _getsysvar_vkeycode:
042A6C DDE5                A   239    	push	ix
042A6E 3E08                A   240    	ld		a, mos_sysvars
042A70 5BCF                A   241    	rst.lil	08h
042A72 DD7E17              A   242    	ld		a, (ix+sysvar_vkeycode)
042A75 DDE1                A   243    	pop		ix
042A77 C9                  A   244    	ret
                           A   245    
042A78                     A   246    _getsysvar_vkeydown:
042A78 DDE5                A   247    	push	ix
042A7A 3E08                A   248    	ld		a, mos_sysvars
042A7C 5BCF                A   249    	rst.lil	08h
042A7E DD7E18              A   250    	ld		a, (ix+sysvar_vkeydown)
042A81 DDE1                A   251    	pop		ix
042A83 C9                  A   252    	ret
                           A   253    
042A84                     A   254    _getsysvar_vkeycount:
042A84 DDE5                A   255    	push	ix
042A86 3E08                A   256    	ld		a, mos_sysvars
042A88 5BCF                A   257    	rst.lil	08h
042A8A DD7E19              A   258    	ld		a, (ix+sysvar_vkeycount)
042A8D DDE1                A   259    	pop		ix
042A8F C9                  A   260    	ret
                           A   261    
042A90                     A   262    _getsysvar_rtc:
042A90 DDE5                A   263    	push	ix
042A92 3E08                A   264    	ld		a, mos_sysvars
042A94 5BCF                A   265    	rst.lil	08h
042A96 111A0000            A   266    	ld		de, sysvar_rtc
042A9A DD19                A   267    	add		ix, de
042A9C DDE5E1              A   268    	ld		hl, ix
042A9F DDE1                A   269    	pop		ix
042AA1 C9                  A   270    	ret
                           A   271    
042AA2                     A   272    _getsysvar_keydelay:
042AA2 DDE5                A   273    	push	ix
042AA4 3E08                A   274    	ld		a, mos_sysvars			; MOS Call 
042AA6 5BCF                A   275    	rst.lil	08h						; returns p
042AA8 21000000            A   276    	ld		hl,0
042AAC DD6E22              A   277    	ld		l, (ix+sysvar_keydelay)
042AAF DD6623              A   278    	ld		h, (ix+sysvar_keydelay+1)
042AB2 DDE1                A   279    	pop		ix
042AB4 C9                  A   280    	ret
                           A   281    
042AB5                     A   282    _getsysvar_keyrate:
042AB5 DDE5                A   283    	push	ix
042AB7 3E08                A   284    	ld		a, mos_sysvars			; MOS Call 
042AB9 5BCF                A   285    	rst.lil	08h						; returns p
042ABB 21000000            A   286    	ld		hl,0
042ABF DD6E24              A   287    	ld		l, (ix+sysvar_keyrate)
042AC2 DD6625              A   288    	ld		h, (ix+sysvar_keyrate+1)
042AC5 DDE1                A   289    	pop		ix
042AC7 C9                  A   290    	ret
                           A   291    
042AC8                     A   292    _getsysvar_keyled:
042AC8 DDE5                A   293    	push	ix
042ACA 3E08                A   294    	ld		a, mos_sysvars
042ACC 5BCF                A   295    	rst.lil	08h
042ACE DD7E26              A   296    	ld		a, (ix+sysvar_keyled)
042AD1 DDE1                A   297    	pop		ix
042AD3 C9                  A   298    	ret
                           A   299    
042AD4                     A   300    _mos_load:
042AD4 DDE5                A   301    	push	ix
042AD6 DD210000 00         A   302    	ld 		ix,0
042ADB DD39                A   303    	add 	ix, sp
042ADD DD2706              A   304    	ld 		hl, (ix+6)	; address of filename (
042AE0 DD1709              A   305    	ld		de, (ix+9)	; address at which to l
042AE3 DD070C              A   306    	ld		bc, (ix+12)	; maximum allowed size
042AE6 3E01                A   307    	ld a,	mos_load
042AE8 5BCF                A   308    	rst.lil	08h			; Load a file from SD c
042AEA DDF9                A   309    	ld		sp,ix
042AEC DDE1                A   310    	pop		ix
042AEE C9                  A   311    	ret
                           A   312    
042AEF                     A   313    _mos_save:
042AEF DDE5                A   314    	push	ix
042AF1 DD210000 00         A   315    	ld 		ix,0
042AF6 DD39                A   316    	add 	ix, sp
042AF8 DD2706              A   317    	ld 		hl, (ix+6)	; address of filename (
042AFB DD1709              A   318    	ld		de, (ix+9)	; address to save from
042AFE DD070C              A   319    	ld		bc, (ix+12)	; number of bytes to sa
042B01 3E02                A   320    	ld a,	mos_save
042B03 5BCF                A   321    	rst.lil	08h			; save file to SD card
042B05 DDF9                A   322    	ld		sp,ix
042B07 DDE1                A   323    	pop		ix
042B09 C9                  A   324    	ret
                           A   325    
042B0A                     A   326    _mos_cd:
042B0A DDE5                A   327    	push	ix
042B0C DD210000 00         A   328    	ld 		ix,0
042B11 DD39                A   329    	add 	ix, sp
042B13 DD2706              A   330    	ld 		hl, (ix+6)	; address of pathname (
042B16 3E03                A   331    	ld a,	mos_cd
042B18 5BCF                A   332    	rst.lil	08h			; Change current direct
042B1A DDF9                A   333    	ld		sp,ix
042B1C DDE1                A   334    	pop		ix
042B1E C9                  A   335    	ret
                           A   336    
042B1F                     A   337    _mos_dir:
042B1F DDE5                A   338    	push	ix
042B21 DD210000 00         A   339    	ld 		ix,0
042B26 DD39                A   340    	add 	ix, sp
042B28 DD2706              A   341    	ld 		hl, (ix+6)	; address of pathname (
042B2B 3E04                A   342    	ld a,	mos_dir
042B2D 5BCF                A   343    	rst.lil	08h			; List SD card folder c
042B2F DDF9                A   344    	ld		sp,ix
042B31 DDE1                A   345    	pop		ix
042B33 C9                  A   346    	ret
                           A   347    
042B34                     A   348    _mos_del:
042B34 DDE5                A   349    	push	ix
042B36 DD210000 00         A   350    	ld 		ix,0
042B3B DD39                A   351    	add 	ix, sp
042B3D DD2706              A   352    	ld 		hl, (ix+6)	; Address of path (zero
042B40 3E05                A   353    	ld a,	mos_del
042B42 5BCF                A   354    	rst.lil	08h			; Delete a file or fold
042B44 DDF9                A   355    	ld		sp,ix
042B46 DDE1                A   356    	pop		ix
042B48 C9                  A   357    	ret
                           A   358    
042B49                     A   359    _mos_ren:
042B49 DDE5                A   360    	push	ix
042B4B DD210000 00         A   361    	ld 		ix,0
042B50 DD39                A   362    	add 	ix, sp
042B52 DD2706              A   363    	ld 		hl, (ix+6)	; Address of filename1 
042B55 DD1709              A   364    	ld		de, (ix+9)	; Address of filename2 
042B58 3E06                A   365    	ld a,	mos_ren
042B5A 5BCF                A   366    	rst.lil	08h			; Rename a file on the 
042B5C DDF9                A   367    	ld		sp,ix
042B5E DDE1                A   368    	pop		ix
042B60 C9                  A   369    	ret
                           A   370    
042B61                     A   371    _mos_copy:
042B61 DDE5                A   372    	push	ix
042B63 DD210000 00         A   373    	ld 		ix,0
042B68 DD39                A   374    	add 	ix, sp
042B6A DD2706              A   375    	ld 		hl, (ix+6)	; Address of filename1 
042B6D DD1709              A   376    	ld		de, (ix+9)	; Address of filename2 
042B70 3E11                A   377    	ld a,	mos_copy
042B72 5BCF                A   378    	rst.lil	08h			; Copy a file on the SD
042B74 DDF9                A   379    	ld		sp,ix
042B76 DDE1                A   380    	pop		ix
042B78 C9                  A   381    	ret
                           A   382    
042B79                     A   383    _mos_mkdir:
042B79 DDE5                A   384    	push	ix
042B7B DD210000 00         A   385    	ld 		ix,0
042B80 DD39                A   386    	add 	ix, sp
042B82 DD2706              A   387    	ld 		hl, (ix+6)	; Address of path (zero
042B85 3E07                A   388    	ld a,	mos_mkdir
042B87 5BCF                A   389    	rst.lil	08h			; Make a folder on the 
042B89 DDF9                A   390    	ld		sp,ix
042B8B DDE1                A   391    	pop		ix
042B8D C9                  A   392    	ret
                           A   393    
042B8E                     A   394    _mos_sysvars:
042B8E DDE5                A   395    	push	ix
042B90 3E08                A   396    	ld a,	mos_sysvars
042B92 5BCF                A   397    	rst.lil	08h			; Fetch a pointer to th
042B94 DDE5E1              A   398    	ld 		hl, ix
042B97 DDE1                A   399    	pop		ix
042B99 C9                  A   400    	ret
                           A   401    
042B9A                     A   402    _mos_editline:
042B9A DDE5                A   403    	push	ix
042B9C DD210000 00         A   404    	ld 		ix,0
042BA1 DD39                A   405    	add 	ix, sp
042BA3 DD2706              A   406    	ld 		hl, (ix+6)	; Address of the buffer
042BA6 DD0709              A   407    	ld		bc, (ix+9)	; Buffer length
042BA9 DD5E0C              A   408    	ld      e,  (ix+12) ; 0 to not clear buffer
042BAC 3E09                A   409    	ld a,	mos_editline
042BAE 5BCF                A   410    	rst.lil	08h			; Invoke the line edito
042BB0 DDF9                A   411    	ld		sp,ix
042BB2 DDE1                A   412    	pop		ix
042BB4 C9                  A   413    	ret
                           A   414    
042BB5                     A   415    _mos_fopen:
042BB5 DDE5                A   416    	push	ix
042BB7 DD210000 00         A   417    	ld		ix,0
042BBC DD39                A   418    	add		ix, sp
042BBE DD2706              A   419    	ld		hl, (ix+6)	; address to 0-terminat
042BC1 DD4E09              A   420    	ld		c,  (ix+9)	; mode : fa_read / fa_w
042BC4 3E0A                A   421    	ld		a, mos_fopen
042BC6 5BCF                A   422    	rst.lil	08h		; returns filehandle in A
042BC8 DDF9                A   423    	ld		sp,ix
042BCA DDE1                A   424    	pop		ix
042BCC C9                  A   425    	ret	
                           A   426    
042BCD                     A   427    _mos_fclose:
042BCD DDE5                A   428    	push	ix
042BCF DD210000 00         A   429    	ld		ix,0
042BD4 DD39                A   430    	add		ix, sp
042BD6 DD4E06              A   431    	ld		c, (ix+6)	; filehandle, or 0 to c
042BD9 3E0B                A   432    	ld		a, mos_fclose
042BDB 5BCF                A   433    	rst.lil	08h		; returns number of files s
042BDD DDF9                A   434    	ld		sp,ix
042BDF DDE1                A   435    	pop		ix
042BE1 C9                  A   436    	ret	
                           A   437    
042BE2                     A   438    _mos_fgetc:
042BE2 DDE5                A   439    	push	ix
042BE4 DD210000 00         A   440    	ld		ix,0
042BE9 DD39                A   441    	add		ix, sp
042BEB DD4E06              A   442    	ld		c, (ix+6)	; filehandle
042BEE 3E0C                A   443    	ld		a, mos_fgetc
042BF0 5BCF                A   444    	rst.lil	08h		; returns character in A
042BF2 DDF9                A   445    	ld		sp,ix
042BF4 DDE1                A   446    	pop		ix
042BF6 C9                  A   447    	ret	
                           A   448    
042BF7                     A   449    _mos_fputc:
042BF7 DDE5                A   450    	push	ix
042BF9 DD210000 00         A   451    	ld		ix,0
042BFE DD39                A   452    	add		ix, sp
042C00 DD4E06              A   453    	ld		c, (ix+6)	; filehandle
042C03 DD4609              A   454    	ld		b, (ix+9)	; character to write
042C06 3E0D                A   455    	ld		a, mos_fputc
042C08 5BCF                A   456    	rst.lil	08h		; returns nothing
042C0A DDF9                A   457    	ld		sp,ix
042C0C DDE1                A   458    	pop		ix
042C0E C9                  A   459    	ret	
                           A   460    
042C0F                     A   461    _mos_feof:
042C0F DDE5                A   462    	push	ix
042C11 DD210000 00         A   463    	ld		ix,0
042C16 DD39                A   464    	add		ix, sp
042C18 DD4E06              A   465    	ld		c, (ix+6)	; filehandle
042C1B 3E0E                A   466    	ld		a, mos_feof
042C1D 5BCF                A   467    	rst.lil	08h		; returns A: 1 at End-of-Fi
042C1F DDF9                A   468    	ld		sp,ix
042C21 DDE1                A   469    	pop		ix
042C23 C9                  A   470    	ret	
                           A   471    
042C24                     A   472    _mos_getError:
042C24 DDE5                A   473    	push	ix
042C26 DD210000 00         A   474    	ld		ix,0
042C2B DD39                A   475    	add		ix, sp
042C2D DD5E06              A   476    	ld		e, (ix+6)	; The error code
042C30 DD2707              A   477    	ld		hl,(ix+7)	; Address of buffer to 
042C33 DD070A              A   478    	ld		bc,(ix+10)  ; Size of buffer
042C36 3E0F                A   479    	ld		a, mos_getError
042C38 5BCF                A   480    	rst.lil	08h			; Copy an error string 
042C3A DDF9                A   481    	ld		sp,ix
042C3C DDE1                A   482    	pop		ix
042C3E C9                  A   483    	ret	
                           A   484    
042C3F                     A   485    _mos_oscli:
042C3F DDE5                A   486    	push	ix
042C41 DD210000 00         A   487    	ld 		ix,0
042C46 DD39                A   488    	add 	ix, sp
042C48 DD2706              A   489    	ld 		hl, (ix+6)	; Pointer the the MOS c
042C4B DD0709              A   490    	ld		bc, (ix+9)	; Pointer to additional
042C4E DD170C              A   491    	ld      de, (ix+12) ; Number of additional 
042C51 3E10                A   492    	ld a,	mos_oscli
042C53 5BCF                A   493    	rst.lil	08h			; Execute a MOS command
042C55 DDF9                A   494    	ld		sp,ix
042C57 DDE1                A   495    	pop		ix
042C59 C9                  A   496    	ret
                           A   497    
042C5A                     A   498    _mos_getrtc:
042C5A DDE5                A   499    	push	ix
042C5C DD210000 00         A   500    	ld 		ix,0
042C61 DD39                A   501    	add 	ix, sp
042C63 DD2706              A   502    	ld 		hl, (ix+6)	; Pointer to a buffer t
042C66 3E12                A   503    	ld a,	mos_getrtc
042C68 5BCF                A   504    	rst.lil	08h			; Get a time string fro
042C6A DDF9                A   505    	ld		sp,ix
042C6C DDE1                A   506    	pop		ix
042C6E C9                  A   507    	ret
                           A   508    
042C6F                     A   509    _mos_setrtc:
042C6F DDE5                A   510    	push	ix
042C71 DD210000 00         A   511    	ld 		ix,0
042C76 DD39                A   512    	add 	ix, sp
042C78 DD2706              A   513    	ld 		hl, (ix+6)	; Pointer to a 6-byte b
042C7B 3E13                A   514    	ld a,	mos_setrtc
042C7D 5BCF                A   515    	rst.lil	08h			; Set the RTC (Requires
042C7F DDF9                A   516    	ld		sp,ix
042C81 DDE1                A   517    	pop		ix
042C83 C9                  A   518    	ret
                           A   519    
042C84                     A   520    _mos_setintvector:
042C84 DDE5                A   521    	push	ix
042C86 DD210000 00         A   522    	ld 		ix,0
042C8B DD39                A   523    	add 	ix, sp
042C8D DD1706              A   524    	ld 		de,	(ix+6)	; Interrupt vector numb
042C90 DD2709              A   525    	ld		hl, (ix+9)	; Address of new interr
042C93 3E14                A   526    	ld a,	mos_setintvector
042C95 5BCF                A   527    	rst.lil	08h			; Set an interrupt vect
042C97 DDF9                A   528    	ld		sp,ix
042C99 DDE1                A   529    	pop		ix
042C9B C9                  A   530    	ret
                           A   531    
042C9C                     A   532    _mos_uopen:
042C9C DDE5                A   533    	push	ix
042C9E DD210000 00         A   534    	ld 		ix,0
042CA3 DD39                A   535    	add 	ix, sp
042CA5 DD2706              A   536    	ld 		hl, (ix+6)	; Address of uart1 sett
042CA8 DDE5                A   537    	push	ix
042CAA E5DDE1              A   538    	ld		ix, hl
042CAD 3E15                A   539    	ld		a, mos_uopen
042CAF 5BCF                A   540    	rst.lil 08h
042CB1 DDE1                A   541    	pop		ix
042CB3 DDF9                A   542    	ld		sp,ix
042CB5 DDE1                A   543    	pop		ix
042CB7 C9                  A   544    	ret
                           A   545    
042CB8                     A   546    _mos_uclose:
042CB8 DDE5                A   547    	push	ix
042CBA 3E16                A   548    	ld		a, mos_uclose
042CBC 5BCF                A   549    	rst.lil	08h
042CBE DDE1                A   550    	pop		ix
042CC0 C9                  A   551    	ret
                           A   552    
042CC1                     A   553    _mos_ugetc:
042CC1 DDE5                A   554    	push	ix
042CC3 21000000            A   555    	ld		hl, 0
042CC7 3E17                A   556    	ld		a, mos_ugetc	; Read a byte from 
042CC9 5BCF                A   557    	rst.lil	08h
042CCB 6F                  A   558    	ld		l, a
042CCC 30 02               A   559    	jr		nc, $F
042CCE 2601                A   560    	ld		h, 1h			; error, return >25
042CD0                     A   561    $$:
042CD0 DDE1                A   562    	pop		ix
042CD2 C9                  A   563    	ret
                           A   564    
042CD3                     A   565    _mos_uputc:
042CD3 DDE5                A   566    	push	ix
042CD5 4F                  A   567    	ld		c, a
042CD6 3E18                A   568    	ld		a, mos_uputc
042CD8 5BCF                A   569    	rst.lil	08h
042CDA 3E01                A   570    	ld		a, 1h
042CDC 30 01               A   571    	jr		nc, $F
042CDE AF                  A   572    	xor		a,a				; error condition, 
042CDF                     A   573    $$:
042CDF DDE1                A   574    	pop		ix
042CE1 C9                  A   575    	ret
                           A   576    
                           A   577    end


Errors: 0
Warnings: 0
Lines Assembled: 746
